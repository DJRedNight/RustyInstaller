:::::::::::::::::::::::::::
:: DO NOT EDIT THIS FILE ::
:::::::::::::::::::::::::::
@echo off
SETLOCAL EnableDelayedExpansion

:: Change the text to green
echo [92m

:: Ask The User if they want to load the map configuration or the procedural configuration
echo.
echo What would you like to do?
echo.
echo 1 - Load Procedural Configuration
echo 2 - Load Custom Map Configuration
echo.
choice /C:12 /M "What would you like to do?"
:: Clear The Text Color
echo [0m


:: Load Procedural Configuration
if !ERRORLEVEL! ==1 (
	call :ValidateProceduralConfiguration
	call :RunProceduralServer
)

:: Load Custom Map Configuration
if !ERRORLEVEL! ==2 (
	call :ValidateCustomMapConfiguration
	call :RunCustomServer
)

:: Validate Procedural Map Configuration
:ValidateProceduralConfiguration
echo Checking if Procedural Map Configuration File Exists...
:: Check if procedural configuration file is set
if not exist proceduralConfig.json (
	echo.
	call modules/FlashMessage.cmd warning "proceduralConfig.json file does not exist. Redownload the zip file from GitHub to get a new copy!"
	echo.
	pause
	exit
)
call modules/FlashMessage.cmd success "Procedural Map Configuration File Found!"
exit /B %ERRORLEVEL%


:: Validate Custom Map Configuration
:ValidateCustomMapConfiguration
echo Checking if Custom Map Configuration File Exists...
:: Check if custom map configuration file is set
if not exist customMapConfig.json (
	echo.
	call modules/FlashMessage.cmd warning "customMapConfig.json file does not exist. Redownload the zip file from GitHub to get a new copy!"
	echo.
	pause
	exit
)
call modules/FlashMessage.cmd success "Custom Map Configuration File Found!"
exit /B %ERRORLEVEL%


:: Run A Procedural Rust Server
:RunProceduralServer
:: Read JSON file line by line:
for /F "usebackq delims=" %%L in ("proceduralConfig.json") do (
    :: Store current line string
    set "LINE=%%L"
    setlocal EnableDelayedExpansion
    :: Replace key/value separator `": "` by `":"` (remove space):
    set "LINE=!LINE:": "=":"!"
    :: Trim off opening and closing braces `{`/`}`:
    if defined LINE if "!LINE:~,1!"=="{" set "LINE=!LINE:~1!"
    if defined LINE if "!LINE:~-1!"=="}" set "LINE=!LINE:~,-1!"
    :: Iterate through key/value pairs (separated by `, `):
    for %%P in (!LINE!) do (
        endlocal
        :: Split key/value pair:
        for /F "tokens=1* delims=: eol=:" %%Q in ("%%P") do (
            :: Remove quotes, assign variable (key = value):
            set "%%~Q=%%~R"
        )
        setlocal EnableDelayedExpansion
    )
    endlocal
)

cd %cd%\RustServer

@echo on

RustDedicated.exe -batchmode ^
+server.port %server.port% ^
+server.level "%server.level%" ^
+server.seed %server.seed% ^
+server.worldsize %server.worldsize% ^
+server.maxplayers %server.maxplayers%  ^
+server.hostname "%server.hostname%" ^
+server.description "%server.description%" ^
+server.url "%server.url%" ^
+server.headerimage "%server.headerimage%" ^
+server.identity "myserver" ^
+server.gamemode "%server.gamemode%" ^
+server.tags "%server.tags%" ^
+rcon.port %rcon.port% ^
+rcon.password %rcon.password% ^
+rcon.web %rcon.web%

cls
echo Server has stopped...
pause
exit

:: Run A Custom Map Rust Server
:RunCustomServer
:: Read JSON file line by line:
for /F "usebackq delims=" %%L in ("customMapConfig.json") do (
    :: Store current line string
    set "LINE=%%L"
    setlocal EnableDelayedExpansion
    :: Replace key/value separator `": "` by `":"` (remove space):
    set "LINE=!LINE:": "=":"!"
    :: Trim off opening and closing braces `{`/`}`:
    if defined LINE if "!LINE:~,1!"=="{" set "LINE=!LINE:~1!"
    if defined LINE if "!LINE:~-1!"=="}" set "LINE=!LINE:~,-1!"
    :: Iterate through key/value pairs (separated by `, `):
    for %%P in (!LINE!) do (
        endlocal
        :: Split key/value pair:
        for /F "tokens=1* delims=: eol=:" %%Q in ("%%P") do (
            :: Remove quotes, assign variable (key = value):
            set "%%~Q=%%~R"
        )
        setlocal EnableDelayedExpansion
    )
    endlocal
)

cd %cd%\RustServer

@echo on

RustDedicated.exe -batchmode ^
+server.port %server.port% ^
+server.level "%server.level%" ^
+levelurl "%levelurl%" ^
+server.maxplayers %server.maxplayers%  ^
+server.hostname "%server.hostname%" ^
+server.description "%server.description%" ^
+server.url "%server.url%" ^
+server.headerimage "%server.headerimage%" ^
+server.identity "myserver" ^
+server.gamemode "%server.gamemode%" ^
+server.tags "%server.tags%" ^
+rcon.port %rcon.port% ^
+rcon.password %rcon.password% ^
+rcon.web %rcon.web%

cls
echo Server has stopped...
pause
exit
